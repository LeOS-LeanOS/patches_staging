From 26da3818de62e111b77d31f5588fd430059dc48a Mon Sep 17 00:00:00 2001
From: ChonDoit <42556721+ChonDoit@users.noreply.github.com>
Date: Mon, 10 Mar 2025 23:16:56 -0300
Subject: [PATCH 1/1] Add property to disable APCF extended features

---
 system/gd/hci/le_scanning_manager.cc | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/system/gd/hci/le_scanning_manager.cc b/system/gd/hci/le_scanning_manager.cc
index 439b624..ce51dd0 100644
--- a/system/gd/hci/le_scanning_manager.cc
+++ b/system/gd/hci/le_scanning_manager.cc
@@ -63,6 +63,8 @@ constexpr uint8_t kCodedPhyMask = 1 << 2;

 // system properties
 const std::string kLeRxPathLossCompProperty = "bluetooth.hardware.radio.le_rx_path_loss_comp_db";
+const std::string kPropertyDisableApcfExtendedFeatures = "persist.sys.bt.le.disable_apcf_extended_features";
+bool kDisableApcfExtendedFeatures = false;

 const ModuleFactory LeScanningManager::Factory =
         ModuleFactory([]() { return new LeScanningManager(); });
@@ -193,7 +195,9 @@ struct LeScanningManager::impl : public LeAddressManagerCallback {
       api_type_ = ScanApiType::LEGACY;
     }
     is_filter_supported_ = controller_->IsSupported(OpCode::LE_ADV_FILTER);
-    if (is_filter_supported_) {
+    if (os::GetSystemProperty(kPropertyDisableApcfExtendedFeatures) == "1")
+        kDisableApcfExtendedFeatures = true;
+    if (is_filter_supported_ && !kDisableApcfExtendedFeatures) {
       le_scanning_interface_->EnqueueCommand(
               LeAdvFilterReadExtendedFeaturesBuilder::Create(),
               module_handler_->BindOnceOn(this, &impl::on_apcf_read_extended_features_complete));
--
2.47.2
